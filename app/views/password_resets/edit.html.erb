<div class="mdl-layout mdl-js-layout">
  <main class="mdl-layout__content">
    <h3>My Wordlist</h3>
    <h4>Reset Your Password</h4>

    <%= form_with url: update_password_path, method: :patch do |form| %>
      <div class="field mdl-textfield mdl-js-textfield">
        <%= form.label :password, "New Password", class: "mdl-textfield__label" %>
        <div class="password-wrapper">
          <%= form.password_field :password, id: "password", minlength: 8, class: "mdl-textfield__input" %>
          <span id="toggle-password" class="toggle-password">
            <i class="material-icons">visibility</i>
          </span>
        </div>
      </div>

      <div class="field mdl-textfield mdl-js-textfield">
        <%= form.label :password_confirmation, "Confirm New Password", class: "mdl-textfield__label" %>
        <div class="password-wrapper">
          <%= form.password_field :password_confirmation, class: "mdl-textfield__input" %>
          <span id="toggle-password-confirmation" class="toggle-password">
            <i class="material-icons">visibility</i>
          </span>
        </div>
      </div>

      <%= hidden_field_tag :token, params[:token] %>

      <div class="actions">
        <%= form.submit "Reset Password", class: "mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent" %>
      </div>
    <% end %>
  </main>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function() {
    const password = document.getElementById("password");
    const passwordConfirmation = document.getElementById("password_confirmation");
    const togglePassword = document.getElementById("toggle-password");
    const togglePasswordConfirmation = document.getElementById("toggle-password-confirmation");

    togglePassword.addEventListener("click", function() {
      const currentType = password.getAttribute("type");
      const newType = currentType === "password" ? "text" : "password";
      password.setAttribute("type", newType);

      const icon = this.querySelector("i");
      icon.textContent = newType === "password" ? "visibility" : "visibility_off";
    });

    togglePasswordConfirmation.addEventListener("click", function() {
      const currentType = passwordConfirmation.getAttribute("type");
      const newType = currentType === "password" ? "text" : "password";
      passwordConfirmation.setAttribute("type", newType);

      const icon = this.querySelector("i");
      icon.textContent = newType === "password" ? "visibility" : "visibility_off";
    });

    function validatePassword() {
      if (password.value !== passwordConfirmation.value) {
        passwordConfirmation.setCustomValidity("Passwords do not match.");
      } else {
        passwordConfirmation.setCustomValidity("");
      }
    }

    password.onchange = validatePassword;
    passwordConfirmation.onkeyup = validatePassword;

    const form = document.querySelector("form[data-remote='true']");
    if (form) {
      form.addEventListener("ajax:error", (event) => {
        event.preventDefault();
        const [data, status, xhr] = event.detail;
        console.log("Error response:", status, data);
        // Update the UI accordingly without reloading the page.
        // For example, show an error message to the user.
      });
    }
  });
</script>
